---
# IAM roles
#
# We create X roles
#  - castle-gate    instances which are web facing
#  - vault          instances which holds databases
#  - kitchen-door   instances which behaves as sally ports for ssh logins
#  - courtyard      instances with application logic (behind web facing proxy)
#  - watch-tower    instances wil e-mail functionality
#
#  - backstage      instances with special privileges to manage infrastructure
#  - jenkins-worker instances to build Docker containers
#
# The following code started to work after upgrading to Ansible 2.3.0


# castle-gate
# -----------
- name: Create IAM role for castle-gate
  iam_role:
    region: "{{aws_region}}"
    name: "{{castle_gate}}"
    assume_role_policy_document: "{{lookup('file','assume-role-policy.json')}}"
    state: present

- name: Attach policy to the castle-gate role
  iam_policy:
    region: "{{aws_region}}"
    iam_type: role
    iam_name: "{{castle_gate}}"
    policy_name: "WebFront"
    state: present
    policy_json: "{{lookup('file', 'web-front.json')}}"


# courtyard
# -----------
- name: Create IAM role for courtyard
  iam_role:
    region: "{{aws_region}}"
    name: "{{courtyard}}"
    assume_role_policy_document: "{{lookup('file','assume-role-policy.json')}}"
    state: present

- name: Attach policy to the courtyard role
  iam_policy:
    region: "{{aws_region}}"
    iam_type: role
    iam_name: "{{courtyard}}"
    policy_name: "WebApps"
    state: present
    policy_json: "{{lookup('template', 'web-apps.json.j2')}}"


# kitchen-door
# -----------
- name: Create IAM role for kitchen-door
  iam_role:
    region: "{{aws_region}}"
    name: "{{kitchen_door}}"
    assume_role_policy_document: "{{lookup('file','assume-role-policy.json')}}"
    state: present


# vault
# -----
- name: Create IAM role for vault
  iam_role:
    region: "{{aws_region}}"
    name: "{{vault}}"
    assume_role_policy_document: "{{lookup('file','assume-role-policy.json')}}"
    state: present


# watch-tower
# -----------
- name: Create IAM role for watch-tower
  iam_role:
    region: "{{aws_region}}"
    name: "{{watch_tower}}"
    assume_role_policy_document: "{{lookup('file','assume-role-policy.json')}}"
    state: present


# build-worker
# --------------
- name: Create IAM role for jenkins workers
  iam_role:
    region: "{{aws_region}}"
    name: "{{build_worker}}"
    assume_role_policy_document: "{{lookup('file','assume-role-policy.json')}}"
    state: present

- name: Attach BuildDocker policy to the jenkins-worker role
  iam_policy:
    region: "{{aws_region}}"
    iam_type: role
    iam_name: "{{build_worker}}"
    policy_name: "BuildDocker"
    state: present
    policy_json: "{{lookup('file', 'build-docker.json')}}"


# backstage
# ---------
- name: Create IAM role for backstage
  iam_role:
    region: "{{aws_region}}"
    name: "{{backstage}}"
    assume_role_policy_document: "{{lookup('file','assume-role-policy.json')}}"
    state: present

- name: Attach policy to build and test Docker containers to backstage role
  iam_policy:
    region: "{{aws_region}}"
    iam_type: role
    iam_name: "{{backstage}}"
    policy_name: "JenkinsServer"
    state: present
    policy_json: "{{lookup('template', 'jenkins-server.json.j2')}}"

- name: Attach policy to access logs in S3 bucket to backstage role
  iam_policy:
    region: "{{aws_region}}"
    iam_type: role
    iam_name: "{{backstage}}"
    policy_name: "ReadLogs"
    state: present
    policy_json: "{{lookup('template', 'web-apps.json.j2')}}"
